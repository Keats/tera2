---
source: src/tests/parser.rs
expression: Expressions(expr_nodes)
input_file: src/tests/parser_inputs/success/expressions.txt
---
(- 1)
1
'hello'
true
(- 1.2)
1.2
a
(- a)
(* (- a) 2)
(- (* a 2))
[1, 1.2, a, 'b', true]
[1, 1.2, a, 'b', true]
[[1], [2], [c, d]]
hello.data[var].hey
(+ (+ 1 2) 3)
(+ 1 count)
(+ 1 (* 2 3))
(+ (+ a (* (* b c) d)) e)
(% (* 2 4) 8)
[(+ 1 1), 2, (* 3 2)]
(~ hey ho)
(~ 1 ho)
(~ (- 1.2) ho)
(~ [] ho)
(~ 'hey' ho)
(~ (~ 'hello' ident) 'ho')
(== a b)
(!= a b)
(<= a b)
(>= a b)
(< a b)
(> a b)
(> (+ 1 a) b)
(> (+ 1 a) (* b 8))
(and a b)
(or a b)
(or (== (+ a 1) 2) (> (* b 3) 10))
(in a b)
(in a range{end=2})
(in a 'hello')
(and (in a b) (in b c))
(and (in msg.status ["pending", "confirmed"]) msg.body)
(is a defined{})
(not (is a defined{}))
(is (+ a 1) odd{})
(not (is (+ a 1) odd{}))
(is a ending_with{'s'})
get_url{in_content=true, path=page.path}
get_url{}
(| a round{})
(| a round{})
(| (+ 1 2.1) round{})
(| (+ [1] [3, 2]) sort{})
(| (+ 1 2.1) round{})
(+ (| [1, 2, 3] length{}) 1)
(| (| value json_encode{}) safe{})
(| value truncate{length=10})
(| (| get_content{} upper{}) safe{})
(or (| admin default{}) (== user current_user))
(or (== user current_user) (| admin default{}))
(in members (| interfaces groupby{attribute='vlan'}))
(| (~ a b) upper{})
(| (== status 'needs_restart') ternary{falsy='continue', truthy='restart'})
(| (== status 'needs_restart') ternary{falsy='continue', truthy='restart'})
1
(/ (* 2 3) 10)
(> (+ (+ 2 1) (/ (* a 10) (+ c 1))) 10)
(not a)
(not (* b 1))
(and (not a) (> (+ 1 b) 3))
(not (and (not (and (not id) true)) (+ 1 c)))
(not (in a b))
(not (| admin default{val=true}))
(and (is a defined{}) (not (is b defined{1, 2})))
(not (and (is a defined{}) (is b defined{1, 2})))
(and (> a b) (> a c))
(and (> a b) (> a c))
(and (in person groupA) (in person groupB))
(| (~ (~ query.tags ' ') tags) trim{})
(and (or (and a (is a containing{'a'})) b) (is b containing{'b'}))
macros::input{label='Name', type='text'}
(| macros::input{} safe{})
macros::input{n=(- a 1)}

